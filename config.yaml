# Global configuration for the lecture cleanup pipeline
# You can override most of these via CLI flags in run_pipeline.py

language: ru            # one of: ru, uk, en, de
model: gpt-5-mini          # choose your model, e.g., gpt-5.1 / gpt-4.1 / o4-mini
temperature: 1
top_p: 1.0

# Input format control. When set, overrides auto-detection by file extension.
# One of: srt(VIP), txt (CLI --format still overrides this if provided)
format: txt

# Chunking
txt_chunk_chars: 6500   # chunk size for plain text (TXT)

# Overlap-specific options (advanced)
## Overlap typ
use_context_overlap: cleaned              # one of: raw, cleaned, none (backward-compatible with true/false)

## Number of characters from the END of the previous chunk passed to the model as READ-ONLY CONTEXT.
## Improves continuity; not included in output. Typical: 300–800 (0 = off).
txt_overlap_chars: 500  # overlap for plain text (TXT)

## Overlap sentence delimiters
overlap_sentence_delimiters: ".!?…"   # characters that mark end of sentences for tail selection

# Join-time window (in characters) used to remove any DUPLICATED prefix from the next chunk’s output.
# Usually set equal to txt_overlap_chars; increase if you still see duplicates.
# Try null, but can be completely disabled by setting 0
stitch_dedup_window_chars: null        # if null, defaults to txt_overlap_chars

# Output / behavior
include_timecodes_in_headings: true   # append timecodes to headings when available

# Content optimization mode:
# - normal   : balanced cleanup (default). Keeps meaning; light structure.
# - strict   : no reordering; only punctuation/casing; remove safe fillers.
# - creative : allows stronger rephrasing/merging short sentences; normalizes term variants.
content_mode: creative

# Edit comments emitted at end of each output block (HTML comments like <!-- fixed: ... -->, <!-- merged_terms: ... -->).
# If true, these comments are removed from the final Markdown (still accounted internally by the model).
suppress_edit_comments: false

# Visual style for asides/jokes in the output.
# Allowed values:
# - italic      -> render as italics (*...*)
# - blockquote  -> render as blockquote (> ...)
highlight_asides_style: italic

#############################
# !!!      Warning      !!! #
# High token usage          #
############################# 
# The full result Markdown is sent to the model to produce the summary. It can double your expences.
append_summary: false
summary_heading: "## Summary (не авторський)"

# Paths to stopword lists (one per language)
parasites:
  ru: data/parasites_ru.txt
  uk: data/parasites_uk.txt
  en: data/parasites_en.txt
  de: data/parasites_de.txt

# Deictic anchoring configuration (independent of regular aside styling)
deictic:
  enabled: true           # Master toggle. When false, prompts remain unchanged. CLI --deictic overrides this.
  wrapper_open: "⟦"        # Default inline delimiter; safe in Markdown/Obsidian; rare in prose.
  wrapper_close: "⟧"       # Matching close delimiter.
  # Wrapper alternatives (choose ONE pair; prefer the default):
  # - "⟪" / "⟫"  # Visually similar; some fonts render thinner.
  # - "{|" / "|}" # ASCII fallback; less visually distinct; unlikely to collide with Markdown.
  # - "[†" / "]"  # ASCII; can visually collide with Markdown links [..](..); use only if necessary.
  # - "`" / "`"   # Inline-code look; NOT recommended (conflicts with code styling).
  prefix: "anchor:"        # Fixed key to ease parsing/grepping, e.g., ⟦anchor: «Recall»⟧
  name_quotes_open: "«"
  name_quotes_close: "»"
  decorate: "plain"        # One of: plain | italics | bold.
  unknown_marker: "?"      # For unresolved referents, e.g., ⟦anchor: ?⟧
  max_per_paragraph: 3     # Hard cap to avoid clutter.
  max_per_fragment: 12     # Global cap per fragment.
  window_sentences: 5      # Lookback within THIS FRAGMENT only; ignore CONTEXT for resolution.
  data_dir: "./data"       # Directory with indicative, non-exhaustive deictic wordlists.
